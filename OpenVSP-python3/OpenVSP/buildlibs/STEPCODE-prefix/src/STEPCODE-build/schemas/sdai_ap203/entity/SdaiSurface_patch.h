#ifndef  ENTITY_SDAISURFACE_PATCH_H
#define  ENTITY_SDAISURFACE_PATCH_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiSurface_patch : public SdaiFounded_item {
     protected:
        SDAI_Application_instance_ptr _parent_surface;
        SdaiTransition_code_var _u_transition;
        SdaiTransition_code_var _v_transition;
        SDAI_BOOLEAN _u_sense;
        SDAI_BOOLEAN _v_sense;
    public: 
        SdaiSurface_patch();
        SdaiSurface_patch( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiSurface_patch( SdaiSurface_patch & e );
        ~SdaiSurface_patch();
        int opcode() {
            return 60;
        }
        SdaiBounded_surface_ptr_c parent_surface_() const;
        SdaiBounded_surface_ptr   parent_surface_();
        void parent_surface_( const SdaiBounded_surface_ptr x );

  const SdaiTransition_code_var   u_transition_() const;
        SdaiTransition_code_var   u_transition_();
        void u_transition_( const SdaiTransition_code_var x );

  const SdaiTransition_code_var   v_transition_() const;
        SdaiTransition_code_var   v_transition_();
        void v_transition_( const SdaiTransition_code_var x );

        Boolean   u_sense_() const;
        void u_sense_( const Boolean x );

        Boolean   v_sense_() const;
        void v_sense_( const Boolean x );

        EntityAggregate_ptr_c using_surfaces_() const;
        EntityAggregate_ptr   using_surfaces_();
        void using_surfaces_( const EntityAggregate_ptr x );

};

inline SdaiSurface_patch * create_SdaiSurface_patch() {
    return new SdaiSurface_patch;
}

void init_SdaiSurface_patch(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_surface_patch;
    extern AttrDescriptor *a_120parent_surface;
    extern AttrDescriptor *a_121u_transition;
    extern AttrDescriptor *a_122v_transition;
    extern AttrDescriptor *a_123u_sense;
    extern AttrDescriptor *a_124v_sense;
    extern Inverse_attribute *a_125Iusing_surfaces;
}

#endif
