#ifndef  ENTITY_SDAIBOUNDED_CURVE_CC
#define  ENTITY_SDAIBOUNDED_CURVE_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiBounded_curve.h"

EntityDescriptor * config_control_design::e_bounded_curve = 0;

SdaiBounded_curve::SdaiBounded_curve(): SdaiCurve() {
        /*  parent: SdaiCurve  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_bounded_curve;
    MakeDerived( "dim", "geometric_representation_item" );
}

SdaiBounded_curve::SdaiBounded_curve ( SdaiBounded_curve & e ) : SdaiCurve() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiBounded_curve::~SdaiBounded_curve() {
}

SdaiBounded_curve::SdaiBounded_curve( SDAI_Application_instance * se, bool addAttrs ) : SdaiCurve( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiCurve */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_bounded_curve;
    MakeDerived( "dim", "geometric_representation_item" );
}


void init_SdaiBounded_curve( Registry& reg ) {
    std::string str;

    str.clear();
    str.append( "SUPERTYPE OF ( " );
    str.append( "ONEOF ( polyline, b_spline_curve, trimmed_curve, bounded_pcurve, bounded_surface_curve, composite_curve )\n" );
    str.append( ")" );
    config_control_design::e_bounded_curve->AddSupertype_Stmt( str );
    config_control_design::e_bounded_curve->AddSupertype(config_control_design::e_curve);
    config_control_design::e_curve->AddSubtype(config_control_design::e_bounded_curve);
        reg.AddEntity( *config_control_design::e_bounded_curve );
}

#endif
