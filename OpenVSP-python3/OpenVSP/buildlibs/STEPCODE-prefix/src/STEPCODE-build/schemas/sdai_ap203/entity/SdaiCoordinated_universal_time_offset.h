#ifndef  ENTITY_SDAICOORDINATED_UNIVERSAL_TIME_OFFSET_H
#define  ENTITY_SDAICOORDINATED_UNIVERSAL_TIME_OFFSET_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiCoordinated_universal_time_offset : public SDAI_Application_instance {
    protected:
        SDAI_Integer _hour_offset;
        SDAI_Integer _minute_offset;    //  OPTIONAL
        SdaiAhead_or_behind_var _sense;
    public: 
        SdaiCoordinated_universal_time_offset();
        SdaiCoordinated_universal_time_offset( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiCoordinated_universal_time_offset( SdaiCoordinated_universal_time_offset & e );
        ~SdaiCoordinated_universal_time_offset();
        int opcode() {
            return 221;
        }
        SdaiHour_in_day   hour_offset_() const;
        void hour_offset_( const SdaiHour_in_day x );

        SdaiMinute_in_hour   minute_offset_() const;
        void minute_offset_( const SdaiMinute_in_hour x );

  const SdaiAhead_or_behind_var   sense_() const;
        SdaiAhead_or_behind_var   sense_();
        void sense_( const SdaiAhead_or_behind_var x );

};

inline SdaiCoordinated_universal_time_offset * create_SdaiCoordinated_universal_time_offset() {
    return new SdaiCoordinated_universal_time_offset;
}

void init_SdaiCoordinated_universal_time_offset(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_coordinated_universal_time_offset;
    extern AttrDescriptor *a_385hour_offset;
    extern AttrDescriptor *a_386minute_offset;
    extern AttrDescriptor *a_387sense;
}

#endif
