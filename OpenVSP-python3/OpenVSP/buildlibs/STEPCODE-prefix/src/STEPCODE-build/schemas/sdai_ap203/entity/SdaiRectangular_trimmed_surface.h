#ifndef  ENTITY_SDAIRECTANGULAR_TRIMMED_SURFACE_H
#define  ENTITY_SDAIRECTANGULAR_TRIMMED_SURFACE_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiRectangular_trimmed_surface : public SdaiBounded_surface {
     protected:
        SDAI_Application_instance_ptr _basis_surface;
        SDAI_Real _u1;
        SDAI_Real _u2;
        SDAI_Real _v1;
        SDAI_Real _v2;
        SDAI_BOOLEAN _usense;
        SDAI_BOOLEAN _vsense;
    public: 
        SdaiRectangular_trimmed_surface();
        SdaiRectangular_trimmed_surface( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiRectangular_trimmed_surface( SdaiRectangular_trimmed_surface & e );
        ~SdaiRectangular_trimmed_surface();
        int opcode() {
            return 183;
        }
        SdaiSurface_ptr_c basis_surface_() const;
        SdaiSurface_ptr   basis_surface_();
        void basis_surface_( const SdaiSurface_ptr x );

        SdaiParameter_value   u1_() const;
        void u1_( const SdaiParameter_value x );

        SdaiParameter_value   u2_() const;
        void u2_( const SdaiParameter_value x );

        SdaiParameter_value   v1_() const;
        void v1_( const SdaiParameter_value x );

        SdaiParameter_value   v2_() const;
        void v2_( const SdaiParameter_value x );

        Boolean   usense_() const;
        void usense_( const Boolean x );

        Boolean   vsense_() const;
        void vsense_( const Boolean x );

};

inline SdaiRectangular_trimmed_surface * create_SdaiRectangular_trimmed_surface() {
    return new SdaiRectangular_trimmed_surface;
}

void init_SdaiRectangular_trimmed_surface(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_rectangular_trimmed_surface;
    extern AttrDescriptor *a_326basis_surface;
    extern AttrDescriptor *a_327u1;
    extern AttrDescriptor *a_328u2;
    extern AttrDescriptor *a_329v1;
    extern AttrDescriptor *a_330v2;
    extern AttrDescriptor *a_331usense;
    extern AttrDescriptor *a_332vsense;
}

#endif
