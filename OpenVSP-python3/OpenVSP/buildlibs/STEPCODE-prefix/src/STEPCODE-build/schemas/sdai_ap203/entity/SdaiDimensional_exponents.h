#ifndef  ENTITY_SDAIDIMENSIONAL_EXPONENTS_H
#define  ENTITY_SDAIDIMENSIONAL_EXPONENTS_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiDimensional_exponents : public SDAI_Application_instance {
    protected:
        SDAI_Real _length_exponent;
        SDAI_Real _mass_exponent;
        SDAI_Real _time_exponent;
        SDAI_Real _electric_current_exponent;
        SDAI_Real _thermodynamic_temperature_exponent;
        SDAI_Real _amount_of_substance_exponent;
        SDAI_Real _luminous_intensity_exponent;
    public: 
        SdaiDimensional_exponents();
        SdaiDimensional_exponents( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiDimensional_exponents( SdaiDimensional_exponents & e );
        ~SdaiDimensional_exponents();
        int opcode() {
            return 201;
        }
        SDAI_Real   length_exponent_() const;
        void length_exponent_( const SDAI_Real x );

        SDAI_Real   mass_exponent_() const;
        void mass_exponent_( const SDAI_Real x );

        SDAI_Real   time_exponent_() const;
        void time_exponent_( const SDAI_Real x );

        SDAI_Real   electric_current_exponent_() const;
        void electric_current_exponent_( const SDAI_Real x );

        SDAI_Real   thermodynamic_temperature_exponent_() const;
        void thermodynamic_temperature_exponent_( const SDAI_Real x );

        SDAI_Real   amount_of_substance_exponent_() const;
        void amount_of_substance_exponent_( const SDAI_Real x );

        SDAI_Real   luminous_intensity_exponent_() const;
        void luminous_intensity_exponent_( const SDAI_Real x );

};

inline SdaiDimensional_exponents * create_SdaiDimensional_exponents() {
    return new SdaiDimensional_exponents;
}

void init_SdaiDimensional_exponents(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_dimensional_exponents;
    extern AttrDescriptor *a_353length_exponent;
    extern AttrDescriptor *a_354mass_exponent;
    extern AttrDescriptor *a_355time_exponent;
    extern AttrDescriptor *a_356electric_current_exponent;
    extern AttrDescriptor *a_357thermodynamic_temperature_exponent;
    extern AttrDescriptor *a_358amount_of_substance_exponent;
    extern AttrDescriptor *a_359luminous_intensity_exponent;
}

#endif
