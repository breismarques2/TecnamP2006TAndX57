#ifndef  ENTITY_SDAISHAPE_ASPECT_H
#define  ENTITY_SDAISHAPE_ASPECT_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiShape_aspect : public SDAI_Application_instance {
    protected:
        SDAI_String _name;
        SDAI_String _description;
        SDAI_Application_instance_ptr _of_shape;
        SDAI_LOGICAL _product_definitional;
    public: 
        SdaiShape_aspect();
        SdaiShape_aspect( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiShape_aspect( SdaiShape_aspect & e );
        ~SdaiShape_aspect();
        int opcode() {
            return 212;
        }
  const SdaiLabel   name_() const;
        SdaiLabel   name_();
        void name_( const SdaiLabel x );

  const SdaiText   description_() const;
        SdaiText   description_();
        void description_( const SdaiText x );

        SdaiProduct_definition_shape_ptr_c of_shape_() const;
        SdaiProduct_definition_shape_ptr   of_shape_();
        void of_shape_( const SdaiProduct_definition_shape_ptr x );

        Logical   product_definitional_() const;
        void product_definitional_( const Logical x );

};

inline SdaiShape_aspect * create_SdaiShape_aspect() {
    return new SdaiShape_aspect;
}

void init_SdaiShape_aspect(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_shape_aspect;
    extern AttrDescriptor *a_373name;
    extern AttrDescriptor *a_374description;
    extern AttrDescriptor *a_375of_shape;
    extern AttrDescriptor *a_376product_definitional;
}

#endif
