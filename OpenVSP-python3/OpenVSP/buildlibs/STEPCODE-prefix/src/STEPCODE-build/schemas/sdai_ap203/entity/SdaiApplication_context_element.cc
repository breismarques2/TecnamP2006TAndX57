#ifndef  ENTITY_SDAIAPPLICATION_CONTEXT_ELEMENT_CC
#define  ENTITY_SDAIAPPLICATION_CONTEXT_ELEMENT_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiApplication_context_element.h"

EntityDescriptor * config_control_design::e_application_context_element = 0;
AttrDescriptor * config_control_design::a_214name = 0;
AttrDescriptor * config_control_design::a_215frame_of_reference = 0;

SdaiApplication_context_element::SdaiApplication_context_element() : _frame_of_reference( 0 ) {
        /*  no SuperTypes */

    eDesc = config_control_design::e_application_context_element;
    STEPattribute * a = new STEPattribute( * config_control_design::a_214name, & _name );
    a->set_null();
    attributes.push( a );
    a = new STEPattribute( * config_control_design::a_215frame_of_reference, ( SDAI_Application_instance_ptr * ) & _frame_of_reference );
    a->set_null();
    attributes.push( a );
}

SdaiApplication_context_element::SdaiApplication_context_element ( SdaiApplication_context_element & e ) : SDAI_Application_instance() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiApplication_context_element::~SdaiApplication_context_element() {
}

SdaiApplication_context_element::SdaiApplication_context_element( SDAI_Application_instance * se, bool addAttrs ) : _frame_of_reference( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
    ( void ) addAttrs; /* quell potentially unused var */

        /*  no SuperTypes */

    eDesc = config_control_design::e_application_context_element;
    STEPattribute * a = new STEPattribute( * config_control_design::a_214name,  &_name );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
    a = new STEPattribute( * config_control_design::a_215frame_of_reference, ( SDAI_Application_instance_ptr * ) &_frame_of_reference );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


SdaiLabel SdaiApplication_context_element::name_() {
    return _name;
}

const SdaiLabel SdaiApplication_context_element::name_() const {
    return (const SdaiLabel) _name;
}

void SdaiApplication_context_element::name_( const SdaiLabel x ) {
    _name = x;
}

SdaiApplication_context_ptr SdaiApplication_context_element::frame_of_reference_() {
    if( !_frame_of_reference ) {
        _frame_of_reference = new SdaiApplication_context;
    }
    return (SdaiApplication_context_ptr) _frame_of_reference;
}

SdaiApplication_context_ptr_c SdaiApplication_context_element::frame_of_reference_() const {
    return (SdaiApplication_context_ptr) _frame_of_reference;
}

void SdaiApplication_context_element::frame_of_reference_( const SdaiApplication_context_ptr x ) {
    _frame_of_reference = x;
}

void init_SdaiApplication_context_element( Registry& reg ) {
    std::string str;

    str.clear();
    str.append( "SUPERTYPE OF ( " );
    str.append( "ONEOF ( product_context, product_definition_context, product_concept_context )\n" );
    str.append( ")" );
    config_control_design::e_application_context_element->AddSupertype_Stmt( str );
        config_control_design::a_214name =
          new AttrDescriptor("name",config_control_design::t_label,
          LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_application_context_element);
        config_control_design::e_application_context_element->AddExplicitAttr (config_control_design::a_214name);
    config_control_design::a_215frame_of_reference =
      new AttrDescriptor( "frame_of_reference", config_control_design::e_application_context, LFalse,
       LFalse, AttrType_Explicit, *config_control_design::e_application_context_element);
        config_control_design::e_application_context_element->AddExplicitAttr (config_control_design::a_215frame_of_reference);
        reg.AddEntity( *config_control_design::e_application_context_element );
}

#endif
