#ifndef  ENTITY_SDAIAPPROVAL_PERSON_ORGANIZATION_CC
#define  ENTITY_SDAIAPPROVAL_PERSON_ORGANIZATION_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiApproval_person_organization.h"

EntityDescriptor * config_control_design::e_approval_person_organization = 0;
AttrDescriptor * config_control_design::a_334person_organization = 0;
AttrDescriptor * config_control_design::a_335authorized_approval = 0;
AttrDescriptor * config_control_design::a_336role = 0;

SdaiApproval_person_organization::SdaiApproval_person_organization() : _authorized_approval( 0 ), _role( 0 ) {
        /*  no SuperTypes */

    eDesc = config_control_design::e_approval_person_organization;
    STEPattribute * a = new STEPattribute( * config_control_design::a_334person_organization, & _person_organization );
    a->set_null();
    attributes.push( a );
    a = new STEPattribute( * config_control_design::a_335authorized_approval, ( SDAI_Application_instance_ptr * ) & _authorized_approval );
    a->set_null();
    attributes.push( a );
    a = new STEPattribute( * config_control_design::a_336role, ( SDAI_Application_instance_ptr * ) & _role );
    a->set_null();
    attributes.push( a );
}

SdaiApproval_person_organization::SdaiApproval_person_organization ( SdaiApproval_person_organization & e ) : SDAI_Application_instance() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiApproval_person_organization::~SdaiApproval_person_organization() {
}

SdaiApproval_person_organization::SdaiApproval_person_organization( SDAI_Application_instance * se, bool addAttrs ) : _authorized_approval( 0 ), _role( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
    ( void ) addAttrs; /* quell potentially unused var */

        /*  no SuperTypes */

    eDesc = config_control_design::e_approval_person_organization;
    STEPattribute * a = new STEPattribute( * config_control_design::a_334person_organization,  &_person_organization );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
    a = new STEPattribute( * config_control_design::a_335authorized_approval, ( SDAI_Application_instance_ptr * ) &_authorized_approval );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
    a = new STEPattribute( * config_control_design::a_336role, ( SDAI_Application_instance_ptr * ) &_role );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


SdaiPerson_organization_select_ptr SdaiApproval_person_organization::person_organization_()  {
    return &_person_organization;
}

SdaiPerson_organization_select_ptr_c SdaiApproval_person_organization::person_organization_() const {
    return (const SdaiPerson_organization_select_ptr) &_person_organization;
}

void SdaiApproval_person_organization::person_organization_( const SdaiPerson_organization_select_ptr x )  {
    _person_organization = x;
}

SdaiApproval_ptr SdaiApproval_person_organization::authorized_approval_() {
    if( !_authorized_approval ) {
        _authorized_approval = new SdaiApproval;
    }
    return (SdaiApproval_ptr) _authorized_approval;
}

SdaiApproval_ptr_c SdaiApproval_person_organization::authorized_approval_() const {
    return (SdaiApproval_ptr) _authorized_approval;
}

void SdaiApproval_person_organization::authorized_approval_( const SdaiApproval_ptr x ) {
    _authorized_approval = x;
}

SdaiApproval_role_ptr SdaiApproval_person_organization::role_() {
    if( !_role ) {
        _role = new SdaiApproval_role;
    }
    return (SdaiApproval_role_ptr) _role;
}

SdaiApproval_role_ptr_c SdaiApproval_person_organization::role_() const {
    return (SdaiApproval_role_ptr) _role;
}

void SdaiApproval_person_organization::role_( const SdaiApproval_role_ptr x ) {
    _role = x;
}

void init_SdaiApproval_person_organization( Registry& reg ) {
    std::string str;

        config_control_design::a_334person_organization =
          new AttrDescriptor("person_organization",config_control_design::t_person_organization_select,
          LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_approval_person_organization);
        config_control_design::e_approval_person_organization->AddExplicitAttr (config_control_design::a_334person_organization);
    config_control_design::a_335authorized_approval =
      new AttrDescriptor( "authorized_approval", config_control_design::e_approval, LFalse,
       LFalse, AttrType_Explicit, *config_control_design::e_approval_person_organization);
        config_control_design::e_approval_person_organization->AddExplicitAttr (config_control_design::a_335authorized_approval);
    config_control_design::a_336role =
      new AttrDescriptor( "role", config_control_design::e_approval_role, LFalse,
       LFalse, AttrType_Explicit, *config_control_design::e_approval_person_organization);
        config_control_design::e_approval_person_organization->AddExplicitAttr (config_control_design::a_336role);
        reg.AddEntity( *config_control_design::e_approval_person_organization );
}

#endif
