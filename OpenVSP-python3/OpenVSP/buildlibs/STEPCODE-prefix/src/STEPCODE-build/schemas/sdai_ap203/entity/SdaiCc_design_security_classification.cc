#ifndef  ENTITY_SDAICC_DESIGN_SECURITY_CLASSIFICATION_CC
#define  ENTITY_SDAICC_DESIGN_SECURITY_CLASSIFICATION_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiCc_design_security_classification.h"

EntityDescriptor * config_control_design::e_cc_design_security_classification = 0;
AttrDescriptor * config_control_design::a_279items = 0;

SdaiCc_design_security_classification::SdaiCc_design_security_classification(): SdaiSecurity_classification_assignment(), _items( 0 ) {
        /*  parent: SdaiSecurity_classification_assignment  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_cc_design_security_classification;
    _items = new SdaiClassified_item_agg;
    STEPattribute * a = new STEPattribute( * config_control_design::a_279items, _items );
    a->set_null();
    attributes.push( a );
}

SdaiCc_design_security_classification::SdaiCc_design_security_classification ( SdaiCc_design_security_classification & e ) : SdaiSecurity_classification_assignment() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiCc_design_security_classification::~SdaiCc_design_security_classification() {
    delete _items;
}

SdaiCc_design_security_classification::SdaiCc_design_security_classification( SDAI_Application_instance * se, bool addAttrs ) : SdaiSecurity_classification_assignment( se, addAttrs ), _items( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiSecurity_classification_assignment */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_cc_design_security_classification;
    _items = new SdaiClassified_item_agg;
    STEPattribute * a = new STEPattribute( * config_control_design::a_279items,  _items );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


SdaiClassified_item_agg_ptr SdaiCc_design_security_classification::items_() {
    if( !_items ) {
        _items = new SdaiClassified_item_agg;
    }
    return ( SdaiClassified_item_agg_ptr ) _items;
}

SdaiClassified_item_agg_ptr_c SdaiCc_design_security_classification::items_() const {
    return ( SdaiClassified_item_agg_ptr ) _items;
}

void SdaiCc_design_security_classification::items_( const SdaiClassified_item_agg_ptr x ) {
    if( !_items ) {
        _items = new SdaiClassified_item_agg;
    }
    _items->ShallowCopy( * x );
}

void init_SdaiCc_design_security_classification( Registry& reg ) {
    std::string str;

    config_control_design::e_cc_design_security_classification->AddSupertype(config_control_design::e_security_classification_assignment);
    config_control_design::e_security_classification_assignment->AddSubtype(config_control_design::e_cc_design_security_classification);
        SetTypeDescriptor * t_53 = new SetTypeDescriptor;
        t_53->AssignAggrCreator((AggregateCreator) create_SdaiClassified_item_agg);        // Creator function
        t_53->SetBound1( 1 );
        t_53->SetBound2( 2147483647 );
        t_53->FundamentalType(SET_TYPE);
        t_53->Description("SET [1:?] OF classified_item");
        t_53->OriginatingSchema(config_control_design::schema);
        t_53->ReferentType(config_control_design::t_classified_item);
        config_control_design::schema->AddUnnamedType(t_53);
        config_control_design::a_279items =
          new AttrDescriptor("items",t_53,LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_cc_design_security_classification);
        config_control_design::e_cc_design_security_classification->AddExplicitAttr (config_control_design::a_279items);
        reg.AddEntity( *config_control_design::e_cc_design_security_classification );
}

#endif
