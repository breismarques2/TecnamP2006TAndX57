#ifndef  ENTITY_SDAIWIRE_SHELL_CC
#define  ENTITY_SDAIWIRE_SHELL_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiWire_shell.h"

EntityDescriptor * config_control_design::e_wire_shell = 0;
AttrDescriptor * config_control_design::a_437wire_shell_extent = 0;

SdaiWire_shell::SdaiWire_shell(): SdaiTopological_representation_item(), _wire_shell_extent( 0 ) {
        /*  parent: SdaiTopological_representation_item  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_wire_shell;
    _wire_shell_extent = new EntityAggregate;
    STEPattribute * a = new STEPattribute( * config_control_design::a_437wire_shell_extent, _wire_shell_extent );
    a->set_null();
    attributes.push( a );
}

SdaiWire_shell::SdaiWire_shell ( SdaiWire_shell & e ) : SdaiTopological_representation_item() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiWire_shell::~SdaiWire_shell() {
    delete _wire_shell_extent;
}

SdaiWire_shell::SdaiWire_shell( SDAI_Application_instance * se, bool addAttrs ) : SdaiTopological_representation_item( se, addAttrs ), _wire_shell_extent( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiTopological_representation_item */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_wire_shell;
    _wire_shell_extent = new EntityAggregate;
    STEPattribute * a = new STEPattribute( * config_control_design::a_437wire_shell_extent,  _wire_shell_extent );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


EntityAggregate_ptr SdaiWire_shell::wire_shell_extent_() {
    if( !_wire_shell_extent ) {
        _wire_shell_extent = new EntityAggregate;
    }
    return ( EntityAggregate_ptr ) _wire_shell_extent;
}

EntityAggregate_ptr_c SdaiWire_shell::wire_shell_extent_() const {
    return ( EntityAggregate_ptr ) _wire_shell_extent;
}

void SdaiWire_shell::wire_shell_extent_( const EntityAggregate_ptr x ) {
    if( !_wire_shell_extent ) {
        _wire_shell_extent = new EntityAggregate;
    }
    _wire_shell_extent->ShallowCopy( * x );
}

void init_SdaiWire_shell( Registry& reg ) {
    std::string str;

    config_control_design::e_wire_shell->_where_rules = new Where_rule__list;
        Where_rule * wr;
        str.clear();
        str.append( "wr1: (" );
    str.append( "NOT mixed_loop_type_set( wire_shell_extent )\n" );
        str.append( ");\n" );
        wr = new Where_rule( str.c_str() );
        config_control_design::e_wire_shell->_where_rules->Append( wr );
    config_control_design::e_wire_shell->AddSupertype(config_control_design::e_topological_representation_item);
    config_control_design::e_topological_representation_item->AddSubtype(config_control_design::e_wire_shell);
        SetTypeDescriptor * t_76 = new SetTypeDescriptor;
        t_76->AssignAggrCreator((AggregateCreator) create_EntityAggregate);        // Creator function
        t_76->SetBound1( 1 );
        t_76->SetBound2( 2147483647 );
        t_76->FundamentalType(SET_TYPE);
        t_76->Description("SET [1:?] OF loop");
        t_76->OriginatingSchema(config_control_design::schema);
        t_76->ReferentType(config_control_design::e_loop);
        config_control_design::schema->AddUnnamedType(t_76);
        config_control_design::a_437wire_shell_extent =
          new AttrDescriptor("wire_shell_extent",t_76,LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_wire_shell);
        config_control_design::e_wire_shell->AddExplicitAttr (config_control_design::a_437wire_shell_extent);
        reg.AddEntity( *config_control_design::e_wire_shell );
}

#endif
