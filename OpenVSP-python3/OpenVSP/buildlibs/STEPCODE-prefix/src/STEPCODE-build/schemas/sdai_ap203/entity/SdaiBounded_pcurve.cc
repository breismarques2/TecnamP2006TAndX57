#ifndef  ENTITY_SDAIBOUNDED_PCURVE_CC
#define  ENTITY_SDAIBOUNDED_PCURVE_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiBounded_pcurve.h"

EntityDescriptor * config_control_design::e_bounded_pcurve = 0;

SdaiBounded_pcurve::SdaiBounded_pcurve(): SdaiPcurve() {
        /*  parent: SdaiPcurve  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */
        /*  parent: SdaiBounded_curve  */
    HeadEntity(this);
    AppendMultInstance(new SdaiBounded_curve(this));

    eDesc = config_control_design::e_bounded_pcurve;
    MakeDerived( "dim", "geometric_representation_item" );
}

SdaiBounded_pcurve::SdaiBounded_pcurve ( SdaiBounded_pcurve & e ) : SdaiPcurve() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiBounded_pcurve::~SdaiBounded_pcurve() {
}

SdaiBounded_pcurve::SdaiBounded_pcurve( SDAI_Application_instance * se, bool addAttrs ) : SdaiPcurve( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiPcurve */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */
        /* parent: SdaiBounded_curve */
    se->AppendMultInstance( new SdaiBounded_curve( se, addAttrs ) );

    eDesc = config_control_design::e_bounded_pcurve;
    MakeDerived( "dim", "geometric_representation_item" );
}


void init_SdaiBounded_pcurve( Registry& reg ) {
    std::string str;

    config_control_design::e_bounded_pcurve->_where_rules = new Where_rule__list;
        Where_rule * wr;
        str.clear();
        str.append( "wr1: (" );
    str.append( " 'CONFIG_CONTROL_DESIGN.BOUNDED_CURVE' IN TYPEOF( SELF\\pcurve.reference_to_curve.items[1] )\n" );
        str.append( ");\n" );
        wr = new Where_rule( str.c_str() );
        config_control_design::e_bounded_pcurve->_where_rules->Append( wr );
    config_control_design::e_bounded_pcurve->AddSupertype(config_control_design::e_pcurve);
    config_control_design::e_pcurve->AddSubtype(config_control_design::e_bounded_pcurve);
    config_control_design::e_bounded_pcurve->AddSupertype(config_control_design::e_bounded_curve);
    config_control_design::e_bounded_curve->AddSubtype(config_control_design::e_bounded_pcurve);
        reg.AddEntity( *config_control_design::e_bounded_pcurve );
}

#endif
