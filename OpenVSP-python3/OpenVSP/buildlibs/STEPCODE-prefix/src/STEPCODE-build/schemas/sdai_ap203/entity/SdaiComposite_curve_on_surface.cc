#ifndef  ENTITY_SDAICOMPOSITE_CURVE_ON_SURFACE_CC
#define  ENTITY_SDAICOMPOSITE_CURVE_ON_SURFACE_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiComposite_curve_on_surface.h"

EntityDescriptor * config_control_design::e_composite_curve_on_surface = 0;
Derived_attribute * config_control_design::a_119Dbasis_surface = 0;

SdaiComposite_curve_on_surface::SdaiComposite_curve_on_surface(): SdaiComposite_curve() {
        /*  parent: SdaiComposite_curve  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_composite_curve_on_surface;
    MakeDerived( "dim", "geometric_representation_item" );
    MakeDerived( "n_segments", "composite_curve" );
    MakeDerived( "closed_curve", "composite_curve" );
    MakeDerived( "basis_surface", "composite_curve_on_surface" );
}

SdaiComposite_curve_on_surface::SdaiComposite_curve_on_surface ( SdaiComposite_curve_on_surface & e ) : SdaiComposite_curve() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiComposite_curve_on_surface::~SdaiComposite_curve_on_surface() {
}

SdaiComposite_curve_on_surface::SdaiComposite_curve_on_surface( SDAI_Application_instance * se, bool addAttrs ) : SdaiComposite_curve( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiComposite_curve */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_composite_curve_on_surface;
    MakeDerived( "dim", "geometric_representation_item" );
    MakeDerived( "n_segments", "composite_curve" );
    MakeDerived( "closed_curve", "composite_curve" );
    MakeDerived( "basis_surface", "composite_curve_on_surface" );
}


void init_SdaiComposite_curve_on_surface( Registry& reg ) {
    std::string str;

    config_control_design::e_composite_curve_on_surface->_where_rules = new Where_rule__list;
        Where_rule * wr;
        str.clear();
        str.append( "wr1: (" );
    str.append( "SIZEOF( basis_surface ) > 0\n" );
        str.append( ");\n" );
        wr = new Where_rule( str.c_str() );
        config_control_design::e_composite_curve_on_surface->_where_rules->Append( wr );
        str.clear();
        str.append( "wr2: (" );
    str.append( "constraints_composite_curve_on_surface( SELF )\n" );
        str.append( ");\n" );
        wr = new Where_rule( str.c_str() );
        config_control_design::e_composite_curve_on_surface->_where_rules->Append( wr );
    str.clear();
    str.append( "SUPERTYPE OF ( " );
    str.append( "boundary_curve\n" );
    str.append( ")" );
    config_control_design::e_composite_curve_on_surface->AddSupertype_Stmt( str );
    config_control_design::e_composite_curve_on_surface->AddSupertype(config_control_design::e_composite_curve);
    config_control_design::e_composite_curve->AddSubtype(config_control_design::e_composite_curve_on_surface);
        SetTypeDescriptor * t_22 = new SetTypeDescriptor;
        t_22->AssignAggrCreator((AggregateCreator) create_EntityAggregate);        // Creator function
        t_22->SetBound1( 0 );
        t_22->SetBound2( 2 );
        t_22->FundamentalType(SET_TYPE);
        t_22->Description("SET [0:2] OF surface");
        t_22->OriginatingSchema(config_control_design::schema);
        t_22->ReferentType(config_control_design::e_surface);
        config_control_design::schema->AddUnnamedType(t_22);
        config_control_design::a_119Dbasis_surface =
          new Derived_attribute("basis_surface",t_22,LFalse,LFalse, AttrType_Deriving,
          *config_control_design::e_composite_curve_on_surface);
        config_control_design::e_composite_curve_on_surface->AddExplicitAttr (config_control_design::a_119Dbasis_surface);
        config_control_design::a_119Dbasis_surface->initializer_("get_basis_surface( SELF )");
        reg.AddEntity( *config_control_design::e_composite_curve_on_surface );
}

#endif
