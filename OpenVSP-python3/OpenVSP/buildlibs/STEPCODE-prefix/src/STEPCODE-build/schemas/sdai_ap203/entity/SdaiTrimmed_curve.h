#ifndef  ENTITY_SDAITRIMMED_CURVE_H
#define  ENTITY_SDAITRIMMED_CURVE_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiTrimmed_curve : public SdaiBounded_curve {
     protected:
        SDAI_Application_instance_ptr _basis_curve;
        SdaiTrimming_select_agg_ptr _trim_1;          //  of  trimming_select

        SdaiTrimming_select_agg_ptr _trim_2;          //  of  trimming_select

        SDAI_BOOLEAN _sense_agreement;
        SdaiTrimming_preference_var _master_representation;
    public: 
        SdaiTrimmed_curve();
        SdaiTrimmed_curve( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiTrimmed_curve( SdaiTrimmed_curve & e );
        ~SdaiTrimmed_curve();
        int opcode() {
            return 138;
        }
        SdaiCurve_ptr_c basis_curve_() const;
        SdaiCurve_ptr   basis_curve_();
        void basis_curve_( const SdaiCurve_ptr x );

        SdaiTrimming_select_agg_ptr_c trim_1_() const;
        SdaiTrimming_select_agg_ptr   trim_1_();
        void trim_1_( const SdaiTrimming_select_agg_ptr x );

        SdaiTrimming_select_agg_ptr_c trim_2_() const;
        SdaiTrimming_select_agg_ptr   trim_2_();
        void trim_2_( const SdaiTrimming_select_agg_ptr x );

        Boolean   sense_agreement_() const;
        void sense_agreement_( const Boolean x );

  const SdaiTrimming_preference_var   master_representation_() const;
        SdaiTrimming_preference_var   master_representation_();
        void master_representation_( const SdaiTrimming_preference_var x );

};

inline SdaiTrimmed_curve * create_SdaiTrimmed_curve() {
    return new SdaiTrimmed_curve;
}

void init_SdaiTrimmed_curve(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_trimmed_curve;
    extern AttrDescriptor *a_254basis_curve;
    extern AttrDescriptor *a_255trim_1;
    extern AttrDescriptor *a_256trim_2;
    extern AttrDescriptor *a_257sense_agreement;
    extern AttrDescriptor *a_258master_representation;
}

#endif
