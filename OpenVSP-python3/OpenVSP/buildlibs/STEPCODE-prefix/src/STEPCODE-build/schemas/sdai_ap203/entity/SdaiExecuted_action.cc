#ifndef  ENTITY_SDAIEXECUTED_ACTION_CC
#define  ENTITY_SDAIEXECUTED_ACTION_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiExecuted_action.h"

EntityDescriptor * config_control_design::e_executed_action = 0;

SdaiExecuted_action::SdaiExecuted_action(): SdaiAction() {
        /*  parent: SdaiAction  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_executed_action;
}

SdaiExecuted_action::SdaiExecuted_action ( SdaiExecuted_action & e ) : SdaiAction() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiExecuted_action::~SdaiExecuted_action() {
}

SdaiExecuted_action::SdaiExecuted_action( SDAI_Application_instance * se, bool addAttrs ) : SdaiAction( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiAction */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_executed_action;
}


void init_SdaiExecuted_action( Registry& reg ) {
    std::string str;

    config_control_design::e_executed_action->AddSupertype(config_control_design::e_action);
    config_control_design::e_action->AddSubtype(config_control_design::e_executed_action);
        reg.AddEntity( *config_control_design::e_executed_action );
}

#endif
