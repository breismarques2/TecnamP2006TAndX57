#ifndef  ENTITY_SDAIAPPROVAL_DATE_TIME_CC
#define  ENTITY_SDAIAPPROVAL_DATE_TIME_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiApproval_date_time.h"

EntityDescriptor * config_control_design::e_approval_date_time = 0;
AttrDescriptor * config_control_design::a_413date_time = 0;
AttrDescriptor * config_control_design::a_414dated_approval = 0;

SdaiApproval_date_time::SdaiApproval_date_time() : _dated_approval( 0 ) {
        /*  no SuperTypes */

    eDesc = config_control_design::e_approval_date_time;
    STEPattribute * a = new STEPattribute( * config_control_design::a_413date_time, & _date_time );
    a->set_null();
    attributes.push( a );
    a = new STEPattribute( * config_control_design::a_414dated_approval, ( SDAI_Application_instance_ptr * ) & _dated_approval );
    a->set_null();
    attributes.push( a );
}

SdaiApproval_date_time::SdaiApproval_date_time ( SdaiApproval_date_time & e ) : SDAI_Application_instance() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiApproval_date_time::~SdaiApproval_date_time() {
}

SdaiApproval_date_time::SdaiApproval_date_time( SDAI_Application_instance * se, bool addAttrs ) : _dated_approval( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
    ( void ) addAttrs; /* quell potentially unused var */

        /*  no SuperTypes */

    eDesc = config_control_design::e_approval_date_time;
    STEPattribute * a = new STEPattribute( * config_control_design::a_413date_time,  &_date_time );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
    a = new STEPattribute( * config_control_design::a_414dated_approval, ( SDAI_Application_instance_ptr * ) &_dated_approval );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


SdaiDate_time_select_ptr SdaiApproval_date_time::date_time_()  {
    return &_date_time;
}

SdaiDate_time_select_ptr_c SdaiApproval_date_time::date_time_() const {
    return (const SdaiDate_time_select_ptr) &_date_time;
}

void SdaiApproval_date_time::date_time_( const SdaiDate_time_select_ptr x )  {
    _date_time = x;
}

SdaiApproval_ptr SdaiApproval_date_time::dated_approval_() {
    if( !_dated_approval ) {
        _dated_approval = new SdaiApproval;
    }
    return (SdaiApproval_ptr) _dated_approval;
}

SdaiApproval_ptr_c SdaiApproval_date_time::dated_approval_() const {
    return (SdaiApproval_ptr) _dated_approval;
}

void SdaiApproval_date_time::dated_approval_( const SdaiApproval_ptr x ) {
    _dated_approval = x;
}

void init_SdaiApproval_date_time( Registry& reg ) {
    std::string str;

        config_control_design::a_413date_time =
          new AttrDescriptor("date_time",config_control_design::t_date_time_select,
          LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_approval_date_time);
        config_control_design::e_approval_date_time->AddExplicitAttr (config_control_design::a_413date_time);
    config_control_design::a_414dated_approval =
      new AttrDescriptor( "dated_approval", config_control_design::e_approval, LFalse,
       LFalse, AttrType_Explicit, *config_control_design::e_approval_date_time);
        config_control_design::e_approval_date_time->AddExplicitAttr (config_control_design::a_414dated_approval);
        reg.AddEntity( *config_control_design::e_approval_date_time );
}

#endif
