#ifndef  ENTITY_SDAISOLID_MODEL_CC
#define  ENTITY_SDAISOLID_MODEL_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiSolid_model.h"

EntityDescriptor * config_control_design::e_solid_model = 0;

SdaiSolid_model::SdaiSolid_model(): SdaiGeometric_representation_item() {
        /*  parent: SdaiGeometric_representation_item  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_solid_model;
    MakeDerived( "dim", "geometric_representation_item" );
}

SdaiSolid_model::SdaiSolid_model ( SdaiSolid_model & e ) : SdaiGeometric_representation_item() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiSolid_model::~SdaiSolid_model() {
}

SdaiSolid_model::SdaiSolid_model( SDAI_Application_instance * se, bool addAttrs ) : SdaiGeometric_representation_item( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiGeometric_representation_item */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_solid_model;
    MakeDerived( "dim", "geometric_representation_item" );
}


void init_SdaiSolid_model( Registry& reg ) {
    std::string str;

    str.clear();
    str.append( "SUPERTYPE OF ( " );
    str.append( "manifold_solid_brep\n" );
    str.append( ")" );
    config_control_design::e_solid_model->AddSupertype_Stmt( str );
    config_control_design::e_solid_model->AddSupertype(config_control_design::e_geometric_representation_item);
    config_control_design::e_geometric_representation_item->AddSubtype(config_control_design::e_solid_model);
        reg.AddEntity( *config_control_design::e_solid_model );
}

#endif
