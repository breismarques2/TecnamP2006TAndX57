#ifndef  ENTITY_SDAIGEOMETRIC_SET_CC
#define  ENTITY_SDAIGEOMETRIC_SET_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiGeometric_set.h"

EntityDescriptor * config_control_design::e_geometric_set = 0;
AttrDescriptor * config_control_design::a_162elements = 0;

SdaiGeometric_set::SdaiGeometric_set(): SdaiGeometric_representation_item(), _elements( 0 ) {
        /*  parent: SdaiGeometric_representation_item  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_geometric_set;
    _elements = new SdaiGeometric_set_select_agg;
    STEPattribute * a = new STEPattribute( * config_control_design::a_162elements, _elements );
    a->set_null();
    attributes.push( a );
    MakeDerived( "dim", "geometric_representation_item" );
}

SdaiGeometric_set::SdaiGeometric_set ( SdaiGeometric_set & e ) : SdaiGeometric_representation_item() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiGeometric_set::~SdaiGeometric_set() {
    delete _elements;
}

SdaiGeometric_set::SdaiGeometric_set( SDAI_Application_instance * se, bool addAttrs ) : SdaiGeometric_representation_item( se, addAttrs ), _elements( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiGeometric_representation_item */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_geometric_set;
    _elements = new SdaiGeometric_set_select_agg;
    STEPattribute * a = new STEPattribute( * config_control_design::a_162elements,  _elements );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
    MakeDerived( "dim", "geometric_representation_item" );
}


SdaiGeometric_set_select_agg_ptr SdaiGeometric_set::elements_() {
    if( !_elements ) {
        _elements = new SdaiGeometric_set_select_agg;
    }
    return ( SdaiGeometric_set_select_agg_ptr ) _elements;
}

SdaiGeometric_set_select_agg_ptr_c SdaiGeometric_set::elements_() const {
    return ( SdaiGeometric_set_select_agg_ptr ) _elements;
}

void SdaiGeometric_set::elements_( const SdaiGeometric_set_select_agg_ptr x ) {
    if( !_elements ) {
        _elements = new SdaiGeometric_set_select_agg;
    }
    _elements->ShallowCopy( * x );
}

void init_SdaiGeometric_set( Registry& reg ) {
    std::string str;

    str.clear();
    str.append( "SUPERTYPE OF ( " );
    str.append( "geometric_curve_set\n" );
    str.append( ")" );
    config_control_design::e_geometric_set->AddSupertype_Stmt( str );
    config_control_design::e_geometric_set->AddSupertype(config_control_design::e_geometric_representation_item);
    config_control_design::e_geometric_representation_item->AddSubtype(config_control_design::e_geometric_set);
        SetTypeDescriptor * t_30 = new SetTypeDescriptor;
        t_30->AssignAggrCreator((AggregateCreator) create_SdaiGeometric_set_select_agg);        // Creator function
        t_30->SetBound1( 1 );
        t_30->SetBound2( 2147483647 );
        t_30->FundamentalType(SET_TYPE);
        t_30->Description("SET [1:?] OF geometric_set_select");
        t_30->OriginatingSchema(config_control_design::schema);
        t_30->ReferentType(config_control_design::t_geometric_set_select);
        config_control_design::schema->AddUnnamedType(t_30);
        config_control_design::a_162elements =
          new AttrDescriptor("elements",t_30,LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_geometric_set);
        config_control_design::e_geometric_set->AddExplicitAttr (config_control_design::a_162elements);
        reg.AddEntity( *config_control_design::e_geometric_set );
}

#endif
