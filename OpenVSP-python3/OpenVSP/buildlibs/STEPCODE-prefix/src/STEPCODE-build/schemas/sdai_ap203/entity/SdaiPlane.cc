#ifndef  ENTITY_SDAIPLANE_CC
#define  ENTITY_SDAIPLANE_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiPlane.h"

EntityDescriptor * config_control_design::e_plane = 0;

SdaiPlane::SdaiPlane(): SdaiElementary_surface() {
        /*  parent: SdaiElementary_surface  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_plane;
    MakeDerived( "dim", "geometric_representation_item" );
}

SdaiPlane::SdaiPlane ( SdaiPlane & e ) : SdaiElementary_surface() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiPlane::~SdaiPlane() {
}

SdaiPlane::SdaiPlane( SDAI_Application_instance * se, bool addAttrs ) : SdaiElementary_surface( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiElementary_surface */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_plane;
    MakeDerived( "dim", "geometric_representation_item" );
}


void init_SdaiPlane( Registry& reg ) {
    std::string str;

    config_control_design::e_plane->AddSupertype(config_control_design::e_elementary_surface);
    config_control_design::e_elementary_surface->AddSubtype(config_control_design::e_plane);
        reg.AddEntity( *config_control_design::e_plane );
}

#endif
