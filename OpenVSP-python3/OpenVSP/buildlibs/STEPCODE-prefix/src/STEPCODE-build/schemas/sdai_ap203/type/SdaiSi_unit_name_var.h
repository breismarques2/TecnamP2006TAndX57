#ifndef  TYPE_SDAISI_UNIT_NAME_VAR_H
#define  TYPE_SDAISI_UNIT_NAME_VAR_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

enum Si_unit_name {
        Si_unit_name__metre,
        Si_unit_name__gram,
        Si_unit_name__second,
        Si_unit_name__ampere,
        Si_unit_name__kelvin,
        Si_unit_name__mole,
        Si_unit_name__candela,
        Si_unit_name__radian,
        Si_unit_name__steradian,
        Si_unit_name__hertz,
        Si_unit_name__newton,
        Si_unit_name__pascal,
        Si_unit_name__joule,
        Si_unit_name__watt,
        Si_unit_name__coulomb,
        Si_unit_name__volt,
        Si_unit_name__farad,
        Si_unit_name__ohm,
        Si_unit_name__siemens,
        Si_unit_name__weber,
        Si_unit_name__tesla,
        Si_unit_name__henry,
        Si_unit_name__degree_celsius,
        Si_unit_name__lumen,
        Si_unit_name__lux,
        Si_unit_name__becquerel,
        Si_unit_name__gray,
        Si_unit_name__sievert,
        Si_unit_name_unset
};

class SC_SCHEMA_EXPORT SdaiSi_unit_name_var  :  public SDAI_Enum  {
  protected:
        EnumTypeDescriptor *type;

  public:
        SdaiSi_unit_name_var (const char * n =0, EnumTypeDescriptor *et =config_control_design::t_si_unit_name);
        SdaiSi_unit_name_var (Si_unit_name e, EnumTypeDescriptor *et =config_control_design::t_si_unit_name)
                : type(et) {  set_value (e);  }
        ~SdaiSi_unit_name_var () { }
        SdaiSi_unit_name_var& operator= (const SdaiSi_unit_name_var& e)
                {  set_value (e);  return *this;  }
        operator Si_unit_name () const;

        inline virtual const char * Name () const
                {  return type->Name();  }
        inline virtual int no_elements () const  {  return 28;  }
        virtual const char * element_at (int n) const;
};

typedef       SdaiSi_unit_name_var *   SdaiSi_unit_name_var_ptr;

typedef const SdaiSi_unit_name_var *   SdaiSi_unit_name_var_ptr_c;
  SDAI_Enum * create_SdaiSi_unit_name_var();

class SdaiSi_unit_name_var_agg  :  public EnumAggregate  {
  protected:
    EnumTypeDescriptor *enum_type;

  public:
    SdaiSi_unit_name_var_agg( EnumTypeDescriptor * =config_control_design::t_si_unit_name);
    virtual ~SdaiSi_unit_name_var_agg();
    virtual SingleLinkNode * NewNode()
        { return new EnumNode (new SdaiSi_unit_name_var( "", enum_type )); }
};

typedef       SdaiSi_unit_name_var_agg *   SdaiSi_unit_name_var_agg_ptr;

typedef const SdaiSi_unit_name_var_agg *   SdaiSi_unit_name_var_agg_ptr_c;
  STEPaggregate * create_SdaiSi_unit_name_var_agg ();
void init_SdaiSi_unit_name_var(Registry& reg);

#endif
