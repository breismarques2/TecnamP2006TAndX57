#ifndef  ENTITY_SDAIOPEN_SHELL_CC
#define  ENTITY_SDAIOPEN_SHELL_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiOpen_shell.h"

EntityDescriptor * config_control_design::e_open_shell = 0;

SdaiOpen_shell::SdaiOpen_shell(): SdaiConnected_face_set() {
        /*  parent: SdaiConnected_face_set  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_open_shell;
}

SdaiOpen_shell::SdaiOpen_shell ( SdaiOpen_shell & e ) : SdaiConnected_face_set() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiOpen_shell::~SdaiOpen_shell() {
}

SdaiOpen_shell::SdaiOpen_shell( SDAI_Application_instance * se, bool addAttrs ) : SdaiConnected_face_set( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiConnected_face_set */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_open_shell;
}


void init_SdaiOpen_shell( Registry& reg ) {
    std::string str;

    config_control_design::e_open_shell->AddSupertype(config_control_design::e_connected_face_set);
    config_control_design::e_connected_face_set->AddSubtype(config_control_design::e_open_shell);
        reg.AddEntity( *config_control_design::e_open_shell );
}

#endif
