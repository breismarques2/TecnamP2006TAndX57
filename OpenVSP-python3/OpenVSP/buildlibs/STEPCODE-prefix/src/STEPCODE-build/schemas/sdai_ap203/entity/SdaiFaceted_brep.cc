#ifndef  ENTITY_SDAIFACETED_BREP_CC
#define  ENTITY_SDAIFACETED_BREP_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiFaceted_brep.h"

EntityDescriptor * config_control_design::e_faceted_brep = 0;

SdaiFaceted_brep::SdaiFaceted_brep(): SdaiManifold_solid_brep() {
        /*  parent: SdaiManifold_solid_brep  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_faceted_brep;
    MakeDerived( "dim", "geometric_representation_item" );
}

SdaiFaceted_brep::SdaiFaceted_brep ( SdaiFaceted_brep & e ) : SdaiManifold_solid_brep() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiFaceted_brep::~SdaiFaceted_brep() {
}

SdaiFaceted_brep::SdaiFaceted_brep( SDAI_Application_instance * se, bool addAttrs ) : SdaiManifold_solid_brep( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiManifold_solid_brep */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_faceted_brep;
    MakeDerived( "dim", "geometric_representation_item" );
}


void init_SdaiFaceted_brep( Registry& reg ) {
    std::string str;

    config_control_design::e_faceted_brep->AddSupertype(config_control_design::e_manifold_solid_brep);
    config_control_design::e_manifold_solid_brep->AddSubtype(config_control_design::e_faceted_brep);
        reg.AddEntity( *config_control_design::e_faceted_brep );
}

#endif
