#ifndef  ENTITY_SDAIPRODUCT_DEFINITION_SHAPE_CC
#define  ENTITY_SDAIPRODUCT_DEFINITION_SHAPE_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiProduct_definition_shape.h"

EntityDescriptor * config_control_design::e_product_definition_shape = 0;

SdaiProduct_definition_shape::SdaiProduct_definition_shape(): SdaiProperty_definition() {
        /*  parent: SdaiProperty_definition  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_product_definition_shape;
}

SdaiProduct_definition_shape::SdaiProduct_definition_shape ( SdaiProduct_definition_shape & e ) : SdaiProperty_definition() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiProduct_definition_shape::~SdaiProduct_definition_shape() {
}

SdaiProduct_definition_shape::SdaiProduct_definition_shape( SDAI_Application_instance * se, bool addAttrs ) : SdaiProperty_definition( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiProperty_definition */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_product_definition_shape;
}


void init_SdaiProduct_definition_shape( Registry& reg ) {
    std::string str;

    config_control_design::e_product_definition_shape->_where_rules = new Where_rule__list;
        Where_rule * wr;
        str.clear();
        str.append( "wr1: (" );
    str.append( "NOT ( 'CONFIG_CONTROL_DESIGN.SHAPE_DEFINITION' IN TYPEOF( SELF\\property_definition.definition ) )\n" );
        str.append( ");\n" );
        wr = new Where_rule( str.c_str() );
        config_control_design::e_product_definition_shape->_where_rules->Append( wr );
        config_control_design::e_product_definition_shape->_uniqueness_rules = new Uniqueness_rule__set;
        Uniqueness_rule * ur;
        str.clear();
    str.append( "UR1 : " );
    str.append( "definition\n" );
    ur = new Uniqueness_rule( str.c_str() );
    config_control_design::e_product_definition_shape->_uniqueness_rules->Append(ur);
    config_control_design::e_product_definition_shape->AddSupertype(config_control_design::e_property_definition);
    config_control_design::e_property_definition->AddSubtype(config_control_design::e_product_definition_shape);
        reg.AddEntity( *config_control_design::e_product_definition_shape );
}

#endif
