#ifndef  ENTITY_SDAIITEM_DEFINED_TRANSFORMATION_H
#define  ENTITY_SDAIITEM_DEFINED_TRANSFORMATION_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiItem_defined_transformation : public SDAI_Application_instance {
    protected:
        SDAI_String _name;
        SDAI_String _description;
        SDAI_Application_instance_ptr _transform_item_1;
        SDAI_Application_instance_ptr _transform_item_2;
    public: 
        SdaiItem_defined_transformation();
        SdaiItem_defined_transformation( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiItem_defined_transformation( SdaiItem_defined_transformation & e );
        ~SdaiItem_defined_transformation();
        int opcode() {
            return 25;
        }
  const SdaiLabel   name_() const;
        SdaiLabel   name_();
        void name_( const SdaiLabel x );

  const SdaiText   description_() const;
        SdaiText   description_();
        void description_( const SdaiText x );

        SdaiRepresentation_item_ptr_c transform_item_1_() const;
        SdaiRepresentation_item_ptr   transform_item_1_();
        void transform_item_1_( const SdaiRepresentation_item_ptr x );

        SdaiRepresentation_item_ptr_c transform_item_2_() const;
        SdaiRepresentation_item_ptr   transform_item_2_();
        void transform_item_2_( const SdaiRepresentation_item_ptr x );

};

inline SdaiItem_defined_transformation * create_SdaiItem_defined_transformation() {
    return new SdaiItem_defined_transformation;
}

void init_SdaiItem_defined_transformation(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_item_defined_transformation;
    extern AttrDescriptor *a_44name;
    extern AttrDescriptor *a_45description;
    extern AttrDescriptor *a_46transform_item_1;
    extern AttrDescriptor *a_47transform_item_2;
}

#endif
