#ifndef  ENTITY_SDAIPRODUCT_RELATED_PRODUCT_CATEGORY_CC
#define  ENTITY_SDAIPRODUCT_RELATED_PRODUCT_CATEGORY_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiProduct_related_product_category.h"

EntityDescriptor * config_control_design::e_product_related_product_category = 0;
AttrDescriptor * config_control_design::a_223products = 0;

SdaiProduct_related_product_category::SdaiProduct_related_product_category(): SdaiProduct_category(), _products( 0 ) {
        /*  parent: SdaiProduct_category  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_product_related_product_category;
    _products = new EntityAggregate;
    STEPattribute * a = new STEPattribute( * config_control_design::a_223products, _products );
    a->set_null();
    attributes.push( a );
}

SdaiProduct_related_product_category::SdaiProduct_related_product_category ( SdaiProduct_related_product_category & e ) : SdaiProduct_category() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiProduct_related_product_category::~SdaiProduct_related_product_category() {
    delete _products;
}

SdaiProduct_related_product_category::SdaiProduct_related_product_category( SDAI_Application_instance * se, bool addAttrs ) : SdaiProduct_category( se, addAttrs ), _products( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiProduct_category */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_product_related_product_category;
    _products = new EntityAggregate;
    STEPattribute * a = new STEPattribute( * config_control_design::a_223products,  _products );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


EntityAggregate_ptr SdaiProduct_related_product_category::products_() {
    if( !_products ) {
        _products = new EntityAggregate;
    }
    return ( EntityAggregate_ptr ) _products;
}

EntityAggregate_ptr_c SdaiProduct_related_product_category::products_() const {
    return ( EntityAggregate_ptr ) _products;
}

void SdaiProduct_related_product_category::products_( const EntityAggregate_ptr x ) {
    if( !_products ) {
        _products = new EntityAggregate;
    }
    _products->ShallowCopy( * x );
}

void init_SdaiProduct_related_product_category( Registry& reg ) {
    std::string str;

    config_control_design::e_product_related_product_category->AddSupertype(config_control_design::e_product_category);
    config_control_design::e_product_category->AddSubtype(config_control_design::e_product_related_product_category);
        SetTypeDescriptor * t_44 = new SetTypeDescriptor;
        t_44->AssignAggrCreator((AggregateCreator) create_EntityAggregate);        // Creator function
        t_44->SetBound1( 1 );
        t_44->SetBound2( 2147483647 );
        t_44->FundamentalType(SET_TYPE);
        t_44->Description("SET [1:?] OF product");
        t_44->OriginatingSchema(config_control_design::schema);
        t_44->ReferentType(config_control_design::e_product);
        config_control_design::schema->AddUnnamedType(t_44);
        config_control_design::a_223products =
          new AttrDescriptor("products",t_44,LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_product_related_product_category);
        config_control_design::e_product_related_product_category->AddExplicitAttr (config_control_design::a_223products);
        reg.AddEntity( *config_control_design::e_product_related_product_category );
}

#endif
