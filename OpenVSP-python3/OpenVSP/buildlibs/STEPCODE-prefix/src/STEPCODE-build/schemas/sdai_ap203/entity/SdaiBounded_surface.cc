#ifndef  ENTITY_SDAIBOUNDED_SURFACE_CC
#define  ENTITY_SDAIBOUNDED_SURFACE_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiBounded_surface.h"

EntityDescriptor * config_control_design::e_bounded_surface = 0;

SdaiBounded_surface::SdaiBounded_surface(): SdaiSurface() {
        /*  parent: SdaiSurface  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_bounded_surface;
    MakeDerived( "dim", "geometric_representation_item" );
}

SdaiBounded_surface::SdaiBounded_surface ( SdaiBounded_surface & e ) : SdaiSurface() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiBounded_surface::~SdaiBounded_surface() {
}

SdaiBounded_surface::SdaiBounded_surface( SDAI_Application_instance * se, bool addAttrs ) : SdaiSurface( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiSurface */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_bounded_surface;
    MakeDerived( "dim", "geometric_representation_item" );
}


void init_SdaiBounded_surface( Registry& reg ) {
    std::string str;

    str.clear();
    str.append( "SUPERTYPE OF ( " );
    str.append( "ONEOF ( b_spline_surface, rectangular_trimmed_surface, curve_bounded_surface, rectangular_composite_surface )\n" );
    str.append( ")" );
    config_control_design::e_bounded_surface->AddSupertype_Stmt( str );
    config_control_design::e_bounded_surface->AddSupertype(config_control_design::e_surface);
    config_control_design::e_surface->AddSubtype(config_control_design::e_bounded_surface);
        reg.AddEntity( *config_control_design::e_bounded_surface );
}

#endif
