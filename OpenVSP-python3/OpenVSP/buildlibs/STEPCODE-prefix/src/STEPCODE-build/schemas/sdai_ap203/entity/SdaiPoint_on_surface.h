#ifndef  ENTITY_SDAIPOINT_ON_SURFACE_H
#define  ENTITY_SDAIPOINT_ON_SURFACE_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiPoint_on_surface : public SdaiPoint {
     protected:
        SDAI_Application_instance_ptr _basis_surface;
        SDAI_Real _point_parameter_u;
        SDAI_Real _point_parameter_v;
    public: 
        SdaiPoint_on_surface();
        SdaiPoint_on_surface( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiPoint_on_surface( SdaiPoint_on_surface & e );
        ~SdaiPoint_on_surface();
        int opcode() {
            return 96;
        }
        SdaiSurface_ptr_c basis_surface_() const;
        SdaiSurface_ptr   basis_surface_();
        void basis_surface_( const SdaiSurface_ptr x );

        SdaiParameter_value   point_parameter_u_() const;
        void point_parameter_u_( const SdaiParameter_value x );

        SdaiParameter_value   point_parameter_v_() const;
        void point_parameter_v_( const SdaiParameter_value x );

};

inline SdaiPoint_on_surface * create_SdaiPoint_on_surface() {
    return new SdaiPoint_on_surface;
}

void init_SdaiPoint_on_surface(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_point_on_surface;
    extern AttrDescriptor *a_189basis_surface;
    extern AttrDescriptor *a_190point_parameter_u;
    extern AttrDescriptor *a_191point_parameter_v;
}

#endif
