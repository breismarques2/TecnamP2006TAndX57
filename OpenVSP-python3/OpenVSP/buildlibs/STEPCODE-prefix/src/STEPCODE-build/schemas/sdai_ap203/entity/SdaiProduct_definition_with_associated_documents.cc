#ifndef  ENTITY_SDAIPRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS_CC
#define  ENTITY_SDAIPRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiProduct_definition_with_associated_documents.h"

EntityDescriptor * config_control_design::e_product_definition_with_associated_documents = 0;
AttrDescriptor * config_control_design::a_182documentation_ids = 0;

SdaiProduct_definition_with_associated_documents::SdaiProduct_definition_with_associated_documents(): SdaiProduct_definition(), _documentation_ids( 0 ) {
        /*  parent: SdaiProduct_definition  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_product_definition_with_associated_documents;
    _documentation_ids = new EntityAggregate;
    STEPattribute * a = new STEPattribute( * config_control_design::a_182documentation_ids, _documentation_ids );
    a->set_null();
    attributes.push( a );
}

SdaiProduct_definition_with_associated_documents::SdaiProduct_definition_with_associated_documents ( SdaiProduct_definition_with_associated_documents & e ) : SdaiProduct_definition() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiProduct_definition_with_associated_documents::~SdaiProduct_definition_with_associated_documents() {
    delete _documentation_ids;
}

SdaiProduct_definition_with_associated_documents::SdaiProduct_definition_with_associated_documents( SDAI_Application_instance * se, bool addAttrs ) : SdaiProduct_definition( se, addAttrs ), _documentation_ids( 0 ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiProduct_definition */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_product_definition_with_associated_documents;
    _documentation_ids = new EntityAggregate;
    STEPattribute * a = new STEPattribute( * config_control_design::a_182documentation_ids,  _documentation_ids );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


EntityAggregate_ptr SdaiProduct_definition_with_associated_documents::documentation_ids_() {
    if( !_documentation_ids ) {
        _documentation_ids = new EntityAggregate;
    }
    return ( EntityAggregate_ptr ) _documentation_ids;
}

EntityAggregate_ptr_c SdaiProduct_definition_with_associated_documents::documentation_ids_() const {
    return ( EntityAggregate_ptr ) _documentation_ids;
}

void SdaiProduct_definition_with_associated_documents::documentation_ids_( const EntityAggregate_ptr x ) {
    if( !_documentation_ids ) {
        _documentation_ids = new EntityAggregate;
    }
    _documentation_ids->ShallowCopy( * x );
}

void init_SdaiProduct_definition_with_associated_documents( Registry& reg ) {
    std::string str;

    config_control_design::e_product_definition_with_associated_documents->AddSupertype(config_control_design::e_product_definition);
    config_control_design::e_product_definition->AddSubtype(config_control_design::e_product_definition_with_associated_documents);
        SetTypeDescriptor * t_34 = new SetTypeDescriptor;
        t_34->AssignAggrCreator((AggregateCreator) create_EntityAggregate);        // Creator function
        t_34->SetBound1( 1 );
        t_34->SetBound2( 2147483647 );
        t_34->FundamentalType(SET_TYPE);
        t_34->Description("SET [1:?] OF document");
        t_34->OriginatingSchema(config_control_design::schema);
        t_34->ReferentType(config_control_design::e_document);
        config_control_design::schema->AddUnnamedType(t_34);
        config_control_design::a_182documentation_ids =
          new AttrDescriptor("documentation_ids",t_34,LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_product_definition_with_associated_documents);
        config_control_design::e_product_definition_with_associated_documents->AddExplicitAttr (config_control_design::a_182documentation_ids);
        reg.AddEntity( *config_control_design::e_product_definition_with_associated_documents );
}

#endif
