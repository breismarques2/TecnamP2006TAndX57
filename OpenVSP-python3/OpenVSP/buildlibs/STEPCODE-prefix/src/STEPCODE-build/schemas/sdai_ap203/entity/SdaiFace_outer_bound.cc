#ifndef  ENTITY_SDAIFACE_OUTER_BOUND_CC
#define  ENTITY_SDAIFACE_OUTER_BOUND_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiFace_outer_bound.h"

EntityDescriptor * config_control_design::e_face_outer_bound = 0;

SdaiFace_outer_bound::SdaiFace_outer_bound(): SdaiFace_bound() {
        /*  parent: SdaiFace_bound  */
        /* Ignore the first parent since it is */
        /* part of the main inheritance hierarchy */

    eDesc = config_control_design::e_face_outer_bound;
}

SdaiFace_outer_bound::SdaiFace_outer_bound ( SdaiFace_outer_bound & e ) : SdaiFace_bound() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiFace_outer_bound::~SdaiFace_outer_bound() {
}

SdaiFace_outer_bound::SdaiFace_outer_bound( SDAI_Application_instance * se, bool addAttrs ) : SdaiFace_bound( se, addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
        /* parent: SdaiFace_bound */
        /* Ignore the first parent since it is part *
        ** of the main inheritance hierarchy        */

    eDesc = config_control_design::e_face_outer_bound;
}


void init_SdaiFace_outer_bound( Registry& reg ) {
    std::string str;

    config_control_design::e_face_outer_bound->AddSupertype(config_control_design::e_face_bound);
    config_control_design::e_face_bound->AddSubtype(config_control_design::e_face_outer_bound);
        reg.AddEntity( *config_control_design::e_face_outer_bound );
}

#endif
