#ifndef  ENTITY_SDAIAPPROVAL_ROLE_CC
#define  ENTITY_SDAIAPPROVAL_ROLE_CC

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

#include "schema.h"
#include "sc_memmgr.h"
#include "entity/SdaiApproval_role.h"

EntityDescriptor * config_control_design::e_approval_role = 0;
AttrDescriptor * config_control_design::a_59role = 0;

SdaiApproval_role::SdaiApproval_role() {
        /*  no SuperTypes */

    eDesc = config_control_design::e_approval_role;
    STEPattribute * a = new STEPattribute( * config_control_design::a_59role, & _role );
    a->set_null();
    attributes.push( a );
}

SdaiApproval_role::SdaiApproval_role ( SdaiApproval_role & e ) : SDAI_Application_instance() {
    CopyAs( ( SDAI_Application_instance_ptr ) & e );
}

SdaiApproval_role::~SdaiApproval_role() {
}

SdaiApproval_role::SdaiApproval_role( SDAI_Application_instance * se, bool addAttrs ) {
    /* Set this to point to the head entity. */
    HeadEntity(se);
    ( void ) addAttrs; /* quell potentially unused var */

        /*  no SuperTypes */

    eDesc = config_control_design::e_approval_role;
    STEPattribute * a = new STEPattribute( * config_control_design::a_59role,  &_role );
        /* initialize to NULL (even if not optional)  */
    a ->set_null();
        /* Put attribute on this class' attributes list so the access functions still work. */
    attributes.push( a );
        /* Put attribute on the attributes list for the main inheritance heirarchy.  **
        ** The push method rejects duplicates found by comparing attrDescriptor's.   */
    if( addAttrs ) {
        se->attributes.push( a );
    }
}


SdaiLabel SdaiApproval_role::role_() {
    return _role;
}

const SdaiLabel SdaiApproval_role::role_() const {
    return (const SdaiLabel) _role;
}

void SdaiApproval_role::role_( const SdaiLabel x ) {
    _role = x;
}

void init_SdaiApproval_role( Registry& reg ) {
    std::string str;

        config_control_design::a_59role =
          new AttrDescriptor("role",config_control_design::t_label,
          LFalse,LFalse, AttrType_Explicit,
          *config_control_design::e_approval_role);
        config_control_design::e_approval_role->AddExplicitAttr (config_control_design::a_59role);
        reg.AddEntity( *config_control_design::e_approval_role );
}

#endif
