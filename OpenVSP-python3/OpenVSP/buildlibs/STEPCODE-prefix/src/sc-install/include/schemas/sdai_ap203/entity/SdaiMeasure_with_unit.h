#ifndef  ENTITY_SDAIMEASURE_WITH_UNIT_H
#define  ENTITY_SDAIMEASURE_WITH_UNIT_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiMeasure_with_unit : public SDAI_Application_instance {
    protected:
        SdaiMeasure_value _value_component;
        SdaiUnit _unit_component;
    public: 
        SdaiMeasure_with_unit();
        SdaiMeasure_with_unit( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiMeasure_with_unit( SdaiMeasure_with_unit & e );
        ~SdaiMeasure_with_unit();
        int opcode() {
            return 62;
        }
        SdaiMeasure_value_ptr_c value_component_() const;
        SdaiMeasure_value_ptr   value_component_();
        void value_component_( const SdaiMeasure_value_ptr x );

        SdaiUnit_ptr_c unit_component_() const;
        SdaiUnit_ptr   unit_component_();
        void unit_component_( const SdaiUnit_ptr x );

};

inline SdaiMeasure_with_unit * create_SdaiMeasure_with_unit() {
    return new SdaiMeasure_with_unit;
}

void init_SdaiMeasure_with_unit(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_measure_with_unit;
    extern AttrDescriptor *a_128value_component;
    extern AttrDescriptor *a_129unit_component;
}

#endif
