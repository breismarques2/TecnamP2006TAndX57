#ifndef  ENTITY_SDAIFUNCTIONALLY_DEFINED_TRANSFORMATION_H
#define  ENTITY_SDAIFUNCTIONALLY_DEFINED_TRANSFORMATION_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiFunctionally_defined_transformation : public SDAI_Application_instance {
    protected:
        SDAI_String _name;
        SDAI_String _description;
    public: 
        SdaiFunctionally_defined_transformation();
        SdaiFunctionally_defined_transformation( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiFunctionally_defined_transformation( SdaiFunctionally_defined_transformation & e );
        ~SdaiFunctionally_defined_transformation();
        int opcode() {
            return 68;
        }
  const SdaiLabel   name_() const;
        SdaiLabel   name_();
        void name_( const SdaiLabel x );

  const SdaiText   description_() const;
        SdaiText   description_();
        void description_( const SdaiText x );

};

inline SdaiFunctionally_defined_transformation * create_SdaiFunctionally_defined_transformation() {
    return new SdaiFunctionally_defined_transformation;
}

void init_SdaiFunctionally_defined_transformation(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_functionally_defined_transformation;
    extern AttrDescriptor *a_142name;
    extern AttrDescriptor *a_143description;
}

#endif
