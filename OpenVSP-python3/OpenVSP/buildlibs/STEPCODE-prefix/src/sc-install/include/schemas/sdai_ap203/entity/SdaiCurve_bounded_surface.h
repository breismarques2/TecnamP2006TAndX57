#ifndef  ENTITY_SDAICURVE_BOUNDED_SURFACE_H
#define  ENTITY_SDAICURVE_BOUNDED_SURFACE_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiCurve_bounded_surface : public SdaiBounded_surface {
     protected:
        SDAI_Application_instance_ptr _basis_surface;
        EntityAggregate_ptr _boundaries;          //  of  boundary_curve

        SDAI_BOOLEAN _implicit_outer;
    public: 
        SdaiCurve_bounded_surface();
        SdaiCurve_bounded_surface( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiCurve_bounded_surface( SdaiCurve_bounded_surface & e );
        ~SdaiCurve_bounded_surface();
        int opcode() {
            return 187;
        }
        SdaiSurface_ptr_c basis_surface_() const;
        SdaiSurface_ptr   basis_surface_();
        void basis_surface_( const SdaiSurface_ptr x );

        EntityAggregate_ptr_c boundaries_() const;
        EntityAggregate_ptr   boundaries_();
        void boundaries_( const EntityAggregate_ptr x );

        Boolean   implicit_outer_() const;
        void implicit_outer_( const Boolean x );

};

inline SdaiCurve_bounded_surface * create_SdaiCurve_bounded_surface() {
    return new SdaiCurve_bounded_surface;
}

void init_SdaiCurve_bounded_surface(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_curve_bounded_surface;
    extern AttrDescriptor *a_337basis_surface;
    extern AttrDescriptor *a_338boundaries;
    extern AttrDescriptor *a_339implicit_outer;
}

#endif
