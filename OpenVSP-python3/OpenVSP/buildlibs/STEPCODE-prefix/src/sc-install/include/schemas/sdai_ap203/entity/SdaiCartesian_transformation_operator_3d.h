#ifndef  ENTITY_SDAICARTESIAN_TRANSFORMATION_OPERATOR_3D_H
#define  ENTITY_SDAICARTESIAN_TRANSFORMATION_OPERATOR_3D_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiCartesian_transformation_operator_3d : public SdaiCartesian_transformation_operator {
     protected:
        SDAI_Application_instance_ptr _axis3;    //  OPTIONAL
    public: 
        SdaiCartesian_transformation_operator_3d();
        SdaiCartesian_transformation_operator_3d( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiCartesian_transformation_operator_3d( SdaiCartesian_transformation_operator_3d & e );
        ~SdaiCartesian_transformation_operator_3d();
        int opcode() {
            return 70;
        }
        SdaiDirection_ptr_c axis3_() const;
        SdaiDirection_ptr   axis3_();
        void axis3_( const SdaiDirection_ptr x );

};

inline SdaiCartesian_transformation_operator_3d * create_SdaiCartesian_transformation_operator_3d() {
    return new SdaiCartesian_transformation_operator_3d;
}

void init_SdaiCartesian_transformation_operator_3d(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_cartesian_transformation_operator_3d;
    extern AttrDescriptor *a_149axis3;
    extern Derived_attribute *a_150Du;
}

#endif
