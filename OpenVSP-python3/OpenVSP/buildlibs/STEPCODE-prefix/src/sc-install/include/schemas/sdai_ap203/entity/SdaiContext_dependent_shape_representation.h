#ifndef  ENTITY_SDAICONTEXT_DEPENDENT_SHAPE_REPRESENTATION_H
#define  ENTITY_SDAICONTEXT_DEPENDENT_SHAPE_REPRESENTATION_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiContext_dependent_shape_representation : public SDAI_Application_instance {
    protected:
        SDAI_Application_instance_ptr _representation_relation;
        SDAI_Application_instance_ptr _represented_product_relation;
    public: 
        SdaiContext_dependent_shape_representation();
        SdaiContext_dependent_shape_representation( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiContext_dependent_shape_representation( SdaiContext_dependent_shape_representation & e );
        ~SdaiContext_dependent_shape_representation();
        int opcode() {
            return 204;
        }
        SdaiShape_representation_relationship_ptr_c representation_relation_() const;
        SdaiShape_representation_relationship_ptr   representation_relation_();
        void representation_relation_( const SdaiShape_representation_relationship_ptr x );

        SdaiProduct_definition_shape_ptr_c represented_product_relation_() const;
        SdaiProduct_definition_shape_ptr   represented_product_relation_();
        void represented_product_relation_( const SdaiProduct_definition_shape_ptr x );

};

inline SdaiContext_dependent_shape_representation * create_SdaiContext_dependent_shape_representation() {
    return new SdaiContext_dependent_shape_representation;
}

void init_SdaiContext_dependent_shape_representation(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_context_dependent_shape_representation;
    extern AttrDescriptor *a_364representation_relation;
    extern AttrDescriptor *a_365represented_product_relation;
}

#endif
