#ifndef  TYPE_SDAISI_PREFIX_VAR_H
#define  TYPE_SDAISI_PREFIX_VAR_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

enum Si_prefix {
        Si_prefix__exa,
        Si_prefix__peta,
        Si_prefix__tera,
        Si_prefix__giga,
        Si_prefix__mega,
        Si_prefix__kilo,
        Si_prefix__hecto,
        Si_prefix__deca,
        Si_prefix__deci,
        Si_prefix__centi,
        Si_prefix__milli,
        Si_prefix__micro,
        Si_prefix__nano,
        Si_prefix__pico,
        Si_prefix__femto,
        Si_prefix__atto,
        Si_prefix_unset
};

class SC_SCHEMA_EXPORT SdaiSi_prefix_var  :  public SDAI_Enum  {
  protected:
        EnumTypeDescriptor *type;

  public:
        SdaiSi_prefix_var (const char * n =0, EnumTypeDescriptor *et =config_control_design::t_si_prefix);
        SdaiSi_prefix_var (Si_prefix e, EnumTypeDescriptor *et =config_control_design::t_si_prefix)
                : type(et) {  set_value (e);  }
        ~SdaiSi_prefix_var () { }
        SdaiSi_prefix_var& operator= (const SdaiSi_prefix_var& e)
                {  set_value (e);  return *this;  }
        operator Si_prefix () const;

        inline virtual const char * Name () const
                {  return type->Name();  }
        inline virtual int no_elements () const  {  return 16;  }
        virtual const char * element_at (int n) const;
};

typedef       SdaiSi_prefix_var *   SdaiSi_prefix_var_ptr;

typedef const SdaiSi_prefix_var *   SdaiSi_prefix_var_ptr_c;
  SDAI_Enum * create_SdaiSi_prefix_var();

class SdaiSi_prefix_var_agg  :  public EnumAggregate  {
  protected:
    EnumTypeDescriptor *enum_type;

  public:
    SdaiSi_prefix_var_agg( EnumTypeDescriptor * =config_control_design::t_si_prefix);
    virtual ~SdaiSi_prefix_var_agg();
    virtual SingleLinkNode * NewNode()
        { return new EnumNode (new SdaiSi_prefix_var( "", enum_type )); }
};

typedef       SdaiSi_prefix_var_agg *   SdaiSi_prefix_var_agg_ptr;

typedef const SdaiSi_prefix_var_agg *   SdaiSi_prefix_var_agg_ptr_c;
  STEPaggregate * create_SdaiSi_prefix_var_agg ();
void init_SdaiSi_prefix_var(Registry& reg);

#endif
