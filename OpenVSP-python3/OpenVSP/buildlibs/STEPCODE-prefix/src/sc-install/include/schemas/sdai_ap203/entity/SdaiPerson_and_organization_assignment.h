#ifndef  ENTITY_SDAIPERSON_AND_ORGANIZATION_ASSIGNMENT_H
#define  ENTITY_SDAIPERSON_AND_ORGANIZATION_ASSIGNMENT_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

class SC_SCHEMA_EXPORT SdaiPerson_and_organization_assignment : public SDAI_Application_instance {
    protected:
        SDAI_Application_instance_ptr _assigned_person_and_organization;
        SDAI_Application_instance_ptr _role;
    public: 
        SdaiPerson_and_organization_assignment();
        SdaiPerson_and_organization_assignment( SDAI_Application_instance *se, bool addAttrs = true );
        SdaiPerson_and_organization_assignment( SdaiPerson_and_organization_assignment & e );
        ~SdaiPerson_and_organization_assignment();
        int opcode() {
            return 137;
        }
        SdaiPerson_and_organization_ptr_c assigned_person_and_organization_() const;
        SdaiPerson_and_organization_ptr   assigned_person_and_organization_();
        void assigned_person_and_organization_( const SdaiPerson_and_organization_ptr x );

        SdaiPerson_and_organization_role_ptr_c role_() const;
        SdaiPerson_and_organization_role_ptr   role_();
        void role_( const SdaiPerson_and_organization_role_ptr x );

};

inline SdaiPerson_and_organization_assignment * create_SdaiPerson_and_organization_assignment() {
    return new SdaiPerson_and_organization_assignment;
}

void init_SdaiPerson_and_organization_assignment(Registry& reg);

namespace config_control_design {
    extern EntityDescriptor *e_person_and_organization_assignment;
    extern AttrDescriptor *a_252assigned_person_and_organization;
    extern AttrDescriptor *a_253role;
}

#endif
