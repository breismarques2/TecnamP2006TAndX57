#ifndef  TYPE_SDAIPREFERRED_SURFACE_CURVE_REPRESENTATION_VAR_H
#define  TYPE_SDAIPREFERRED_SURFACE_CURVE_REPRESENTATION_VAR_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

enum Preferred_surface_curve_representation {
        Preferred_surface_curve_representation__curve_3d,
        Preferred_surface_curve_representation__pcurve_s1,
        Preferred_surface_curve_representation__pcurve_s2,
        Preferred_surface_curve_representation_unset
};

class SC_SCHEMA_EXPORT SdaiPreferred_surface_curve_representation_var  :  public SDAI_Enum  {
  protected:
        EnumTypeDescriptor *type;

  public:
        SdaiPreferred_surface_curve_representation_var (const char * n =0, EnumTypeDescriptor *et =config_control_design::t_preferred_surface_curve_representation);
        SdaiPreferred_surface_curve_representation_var (Preferred_surface_curve_representation e, EnumTypeDescriptor *et =config_control_design::t_preferred_surface_curve_representation)
                : type(et) {  set_value (e);  }
        ~SdaiPreferred_surface_curve_representation_var () { }
        SdaiPreferred_surface_curve_representation_var& operator= (const SdaiPreferred_surface_curve_representation_var& e)
                {  set_value (e);  return *this;  }
        operator Preferred_surface_curve_representation () const;

        inline virtual const char * Name () const
                {  return type->Name();  }
        inline virtual int no_elements () const  {  return 3;  }
        virtual const char * element_at (int n) const;
};

typedef       SdaiPreferred_surface_curve_representation_var *   SdaiPreferred_surface_curve_representation_var_ptr;

typedef const SdaiPreferred_surface_curve_representation_var *   SdaiPreferred_surface_curve_representation_var_ptr_c;
  SDAI_Enum * create_SdaiPreferred_surface_curve_representation_var();

class SdaiPreferred_surface_curve_representation_var_agg  :  public EnumAggregate  {
  protected:
    EnumTypeDescriptor *enum_type;

  public:
    SdaiPreferred_surface_curve_representation_var_agg( EnumTypeDescriptor * =config_control_design::t_preferred_surface_curve_representation);
    virtual ~SdaiPreferred_surface_curve_representation_var_agg();
    virtual SingleLinkNode * NewNode()
        { return new EnumNode (new SdaiPreferred_surface_curve_representation_var( "", enum_type )); }
};

typedef       SdaiPreferred_surface_curve_representation_var_agg *   SdaiPreferred_surface_curve_representation_var_agg_ptr;

typedef const SdaiPreferred_surface_curve_representation_var_agg *   SdaiPreferred_surface_curve_representation_var_agg_ptr_c;
  STEPaggregate * create_SdaiPreferred_surface_curve_representation_var_agg ();
void init_SdaiPreferred_surface_curve_representation_var(Registry& reg);

#endif
