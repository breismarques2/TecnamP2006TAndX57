#ifndef  TYPE_SDAITRIMMING_PREFERENCE_VAR_H
#define  TYPE_SDAITRIMMING_PREFERENCE_VAR_H

// This file was generated by exp2cxx,
// git commit id: 0.8, build timestamp 03 Nov 2020 03:17.
// You probably don't want to edit it since your modifications
// will be lost if exp2cxx is used to regenerate it.

enum Trimming_preference {
        Trimming_preference__cartesian,
        Trimming_preference__parameter,
        Trimming_preference__unspecified,
        Trimming_preference_unset
};

class SC_SCHEMA_EXPORT SdaiTrimming_preference_var  :  public SDAI_Enum  {
  protected:
        EnumTypeDescriptor *type;

  public:
        SdaiTrimming_preference_var (const char * n =0, EnumTypeDescriptor *et =config_control_design::t_trimming_preference);
        SdaiTrimming_preference_var (Trimming_preference e, EnumTypeDescriptor *et =config_control_design::t_trimming_preference)
                : type(et) {  set_value (e);  }
        ~SdaiTrimming_preference_var () { }
        SdaiTrimming_preference_var& operator= (const SdaiTrimming_preference_var& e)
                {  set_value (e);  return *this;  }
        operator Trimming_preference () const;

        inline virtual const char * Name () const
                {  return type->Name();  }
        inline virtual int no_elements () const  {  return 3;  }
        virtual const char * element_at (int n) const;
};

typedef       SdaiTrimming_preference_var *   SdaiTrimming_preference_var_ptr;

typedef const SdaiTrimming_preference_var *   SdaiTrimming_preference_var_ptr_c;
  SDAI_Enum * create_SdaiTrimming_preference_var();

class SdaiTrimming_preference_var_agg  :  public EnumAggregate  {
  protected:
    EnumTypeDescriptor *enum_type;

  public:
    SdaiTrimming_preference_var_agg( EnumTypeDescriptor * =config_control_design::t_trimming_preference);
    virtual ~SdaiTrimming_preference_var_agg();
    virtual SingleLinkNode * NewNode()
        { return new EnumNode (new SdaiTrimming_preference_var( "", enum_type )); }
};

typedef       SdaiTrimming_preference_var_agg *   SdaiTrimming_preference_var_agg_ptr;

typedef const SdaiTrimming_preference_var_agg *   SdaiTrimming_preference_var_agg_ptr_c;
  STEPaggregate * create_SdaiTrimming_preference_var_agg ();
void init_SdaiTrimming_preference_var(Registry& reg);

#endif
